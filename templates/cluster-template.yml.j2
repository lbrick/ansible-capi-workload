apiVersion: v1
data:
  cacert: ${OPENSTACK_CLOUD_CACERT_B64}
  clouds.yaml: ${OPENSTACK_CLOUD_YAML_B64}
kind: Secret
metadata:
  labels:
    clusterctl.cluster.x-k8s.io/move: "true"
  name: ${CLUSTER_NAME}-cloud-config
  namespace: {{ cluster_namespace }}
---
apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
kind: KubeadmConfigTemplate
metadata:
  name: ${CLUSTER_NAME}-md-0
  namespace: {{ cluster_namespace }}
spec:
  template:
    spec:
      files: []
      joinConfiguration:
        nodeRegistration:
{% if cri_socket | length > 0 %}
          criSocket: {{ cri_socket }}
{% endif %}
          kubeletExtraArgs:
            cloud-provider: external
            provider-id: openstack:///'{{ '{{' }} instance_id {{ '}}' }}'
          name: '{{ '{{' }} local_hostname {{ '}}' }}'
{% if preKubeadmCommands | length > 0 %}
      preKubeadmCommands:
{% for preKubeadmCommand in preKubeadmCommands %}
        - {{ preKubeadmCommand }}
{% endfor %}
{% endif %}
{% if postKubeadmCommands | length > 0 %}
      postKubeadmCommands:
{% for postKubeadmCommand in postKubeadmCommands %}
        - {{ postKubeadmCommand }}
{% endfor %}
{% endif %}
---
apiVersion: cluster.x-k8s.io/v1beta1
kind: Cluster
metadata:
  name: ${CLUSTER_NAME}
  namespace: {{ cluster_namespace }}
spec:
  clusterNetwork:
    pods:
      cidrBlocks:
      - ${CLUSTER_POD_CIDR}
    serviceDomain: cluster.local
  controlPlaneRef:
    apiVersion: controlplane.cluster.x-k8s.io/v1beta1
    kind: KubeadmControlPlane
    name: ${CLUSTER_NAME}-control-plane
  infrastructureRef:
    apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
    kind: OpenStackCluster
    name: ${CLUSTER_NAME}
---
apiVersion: cluster.x-k8s.io/v1beta1
kind: MachineDeployment
metadata:
  name: ${CLUSTER_NAME}-md-0
  namespace: {{ cluster_namespace }}
  annotations:
    cluster.x-k8s.io/cluster-api-autoscaler-node-group-max-size: "${WORKER_MAX_MACHINE_COUNT}"
    cluster.x-k8s.io/cluster-api-autoscaler-node-group-min-size: "${WORKER_MACHINE_COUNT}"
spec:
  clusterName: ${CLUSTER_NAME}
  replicas: ${WORKER_MACHINE_COUNT}
  selector:
    matchLabels: null
  template:
    spec:
      bootstrap:
        configRef:
          apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
          kind: KubeadmConfigTemplate
          name: ${CLUSTER_NAME}-md-0
      clusterName: ${CLUSTER_NAME}
      failureDomain: ${OPENSTACK_FAILURE_DOMAIN}
      infrastructureRef:
        apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
        kind: OpenStackMachineTemplate
        name: ${CLUSTER_NAME}-md-0
      version: ${KUBERNETES_VERSION}
---
apiVersion: controlplane.cluster.x-k8s.io/v1beta1
kind: KubeadmControlPlane
metadata:
  name: ${CLUSTER_NAME}-control-plane
  namespace: {{ cluster_namespace }}
spec:
  kubeadmConfigSpec:
    clusterConfiguration:
      apiServer:
        extraArgs:
{% if enable_oidc_auth %}
          oidc-issuer-url: "{{ kube_oidc_url }}"
          oidc-client-id: "{{ kube_oidc_client_id }}"
          oidc-username-claim: "{{ kube_oidc_username_claim }}"
          oidc-groups-claim: "{{ kube_oidc_groups_claim }}"
          oidc-username-prefix: "{{ kube_oidc_username_prefix }}"
          oidc-groups-prefix: "{{ kube_oidc_groups_prefix }}"
{% endif %}
      controllerManager:
        extraArgs:
          cloud-provider: external
    files: []
    initConfiguration:
      nodeRegistration:
{% if cri_socket | length > 0 %}
          criSocket: {{ cri_socket }}
{% endif %}
        kubeletExtraArgs:
          cloud-provider: external
          provider-id: openstack:///'{{ '{{' }} instance_id {{ '}}' }}'
        name: '{{ '{{' }} local_hostname {{ '}}' }}'
    joinConfiguration:
      nodeRegistration:
{% if cri_socket | length > 0 %}
          criSocket: {{ cri_socket }}
{% endif %}
        kubeletExtraArgs:
          cloud-provider: external
          provider-id: openstack:///'{{ '{{' }} instance_id {{ '}}' }}'
        name: '{{ '{{' }} local_hostname {{ '}}' }}'
  machineTemplate:
    infrastructureRef:
      apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
      kind: OpenStackMachineTemplate
      name: ${CLUSTER_NAME}-control-plane
  replicas: ${CONTROL_PLANE_MACHINE_COUNT}
  version: ${KUBERNETES_VERSION}
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: OpenStackCluster
metadata:
  name: ${CLUSTER_NAME}
  namespace: {{ cluster_namespace }}
spec:
  apiServerLoadBalancer:
    enabled: true
    provider: ovn
  externalNetwork:
    id: ${OPENSTACK_EXTERNAL_NETWORK_ID}
  identityRef:
    cloudName: ${OPENSTACK_CLOUD}
    name: ${CLUSTER_NAME}-cloud-config
  network:
    filter:
      name: {{ cluster_network }}
  router: 
    filter:
      name: {{ cluster_network }}
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: OpenStackMachineTemplate
metadata:
  name: ${CLUSTER_NAME}-control-plane
  namespace: {{ cluster_namespace }}
spec:
  template:
    spec:
      flavor: ${OPENSTACK_CONTROL_PLANE_MACHINE_FLAVOR}
      image:
        filter:
          name: ${OPENSTACK_IMAGE_NAME}
      sshKeyName: ${OPENSTACK_SSH_KEY_NAME}
      securityGroups:
      - filter:
          name: default
{% if capi_managed_secgroups == false %}
      - filter:
          name: k8s-cluster-default-{{ cluster_name }}-secgroup-controlplane
{% endif %}
{% if additional_cluster_secgroups | length > 0 %}
{% for additional_secgroup in additional_cluster_secgroups %}
      - filter:
          name: {{ additional_secgroup }}
{% endfor %}
{% endif %}
      ports:
      - network:
          filter:
            name: {{ cluster_network }}
{% if additional_cluster_networks | length > 0 %}
{% for additional_networks in additional_cluster_networks %}
      - network:
          filter:
            name: {{ additional_networks }}
{% endfor %}
{% endif %}
{% if control_plane_volume_size > 30 %}
      rootVolume:
          sizeGiB: {{ control_plane_volume_size }}
{% endif %}
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: OpenStackMachineTemplate
metadata:
  name: ${CLUSTER_NAME}-md-0
  namespace: {{ cluster_namespace }}
spec:
  template:
    spec:
      flavor: ${OPENSTACK_NODE_MACHINE_FLAVOR}
      image:
        filter:
          name: ${OPENSTACK_IMAGE_NAME}
      sshKeyName: ${OPENSTACK_SSH_KEY_NAME}
      securityGroups:
      - filter:
          name: default
{% if capi_managed_secgroups == false %}
      - filter:
          name: k8s-cluster-default-{{ cluster_name }}-secgroup-controlplane
{% endif %}
{% if additional_cluster_secgroups | length > 0 %}
{% for additional_secgroup in additional_cluster_secgroups %}
      - filter:
          name: {{ additional_secgroup }}
{% endfor %}
{% endif %}
      ports:
      - network:
          filter:
            name: {{ cluster_network }}
{% if additional_cluster_networks | length > 0 %}
{% for additional_networks in additional_cluster_networks %}
      - network:
          filter:
            name: {{ additional_networks }}
{% endfor %}
{% endif %}
{% if worker_volume_size > 30 %}
      rootVolume:
          sizeGiB: {{ worker_volume_size }}
{% endif %}
