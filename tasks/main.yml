---
- name: Check vars are set
  include_tasks: check-vars.yml

- name: Prerequisites
  include_tasks: prerequisites.yml

- name: Create and initialize clusterctl and cloud manager
  block:

    - name: Deployed ansible managed CAPI security groups
      block:  
        - name: Create Kubernetes control plane security group
          openstack.cloud.security_group:
            cloud: "{{ yaml_openstack_cloud }}"
            state: present
            name: k8s-cluster-default-{{ cluster_name }}-secgroup-controlplane
            description: Ansible Cluster API managed group
          register: controlplane_secgroup

        - name: Create Kubernetes worker security group
          openstack.cloud.security_group:
            cloud: "{{ yaml_openstack_cloud }}"
            state: present
            name: k8s-cluster-default-{{ cluster_name }}-secgroup-worker
            description: Ansible Cluster API managed group
          register: worker_secgroup

        - name: Configure Kubernetes control plane security group
          include_tasks: secgroups-control-plane.yml

        - name: Configure Kubernetes worker security group
          include_tasks: secgroups-worker.yml
      when:
        - "capi_managed_secgroups|default(true)|bool == false"

    - name: Read clouds.yaml
      slurp:
        src: "{{ clouds_yaml_location }}"
      register: file_content

    - name: Decode the base64 encoded version of the YAML file and assign it to a variable
      set_fact:
        file_contents: "{{ file_content['content'] | b64decode | from_yaml }}"

    - name: Check cluster {{ cluster_name }} is initialized
      shell: >-
        kubectl get cluster {{ cluster_name }}
      register: cluster_intialized
      ignore_errors: true

    - name: Create and initialize clusterctl
      include_tasks: configure-install-clusterctl.yml
      when: cluster_intialized.stdout == ''

    - name: Create and initialize cloud manager
      include_tasks: install-cloud-manager.yml
      when: cluster_intialized.stdout == ''

    - name: Workload GPU | Setting GPU Enabled boolean to {{ enable_gpu_nodes }}
      set_fact:
        enable_gpu_worker: "{{ enable_gpu_nodes }}"

    - name: Workload GPU | Deploy extra node
      block:  
        - name: Workload GPU | Prerequisites
          include_tasks: gpu-prerequisites.yml

        - name: Workload GPU | Deploy GPU node
          include_tasks: deploy-gpu-node.yml

        - name: Workload GPU | Deploy GPU operator helm chart
          include_tasks: gpu-helm-chart.yml
      when:
        - "enable_gpu_worker|default(false)|bool == true"

    - name: Create kube namespace for {{ cluster_name }}
      shell: >-
        kubectl create namespace {{ cluster_name }} --dry-run=client -o yaml | kubectl apply -f -

    - name: Create and initialize auto-scaler
      include_tasks: install-autoscaler.yml
      when:
      - cluster_intialized.stdout == ''
      - cluster_worker_count < cluster_max_worker_count

    - name: Create and initialize cluster heathchecks
      include_tasks: install-healthchecks.yml
      when:
      - cluster_intialized.stdout == ''

    - name: Create and initialize cluster metrics server
      include_tasks: install-metrics-server.yml
      when:
      - cluster_intialized.stdout == ''
  when:
    - clouds_yaml_file.stat.exists


